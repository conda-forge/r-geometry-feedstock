{% set version = "0.5.2" %}
{% set posix = 'm2-' if win else '' %}

package:
  name: r-geometry
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/geometry_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/geometry/geometry_{{ version }}.tar.gz
  sha256: c83a1e17ada83112a10ed99d4ddb80e0f1fd1aa70989a4d805480780ed9b46a5

build:
  number: 2
  rpaths:
    - lib/R/lib/
    - lib/
  missing_dso_whitelist:
    - '*/R.dll'        # [win]
    - '*/Rblas.dll'    # [win]
    - '*/Rlapack.dll'  # [win]

requirements:
  build:
    - {{ compiler('c') }}          # [not win]
    - {{ stdlib("c") }}            # [not win]
    - {{ compiler('m2w64_c') }}    # [win]
    - {{ stdlib("m2w64_c") }}      # [win]
    - {{ compiler('cxx') }}        # [not win]
    - {{ compiler('m2w64_cxx') }}  # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]
    - cross-r-base {{ r_base }}    # [build_platform != target_platform]
    - r-rcpp                       # [build_platform != target_platform]
    - r-rcppprogress               # [build_platform != target_platform]
    - r-linprog                    # [build_platform != target_platform]
    - r-lpsolve                    # [build_platform != target_platform]
    - r-magic                      # [build_platform != target_platform]
  host:
    - r-base
    - r-rcpp
    - r-rcppprogress
    - r-linprog
    - r-lpsolve
    - r-magic
  run:
    - r-base
    - r-rcpp
    - r-rcppprogress
    - r-linprog
    - r-lpsolve
    - r-magic

test:
  commands:
    - $R -e "library('geometry')"           # [not win]
    - "\"%R%\" -e \"library('geometry')\""  # [win]

about:
  home: https://davidcsterratt.github.io/geometry
  license: GPL-3.0-or-later
  summary: Makes the 'Qhull' library <http://www.qhull.org> available in R, in a similar manner as in Octave and MATLAB. Qhull computes convex hulls, Delaunay triangulations, halfspace intersections about a point, Voronoi diagrams, furthest-site Delaunay triangulations, and furthest-site Voronoi diagrams. It runs in 2D,
    3D, 4D, and higher dimensions. It implements the Quickhull algorithm for computing the convex hull. Qhull does not support constrained Delaunay triangulations, or mesh generation of non-convex objects, but the package does include some R functions that allow for this.
  license_file:
    - {{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3

extra:
  recipe-maintainers:
    - conda-forge/r
    - ocefpaf
